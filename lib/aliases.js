// Generated by CoffeeScript 1.3.3
(function() {

  module.exports = {
    migrate: function(alias, currentIndex, newIndex, callback) {
      if (callback == null) {
        callback = this.defaultCallback;
      }
      alias = alias.toString();
      return this.modifyAliases([
        {
          remove: {
            alias: alias,
            index: currentIndex
          },
          add: {
            alias: alias,
            index: newIndex
          }
        }
      ], callback);
    },
    createAlias: function(alias, index, callback) {
      if (callback == null) {
        callback = this.defaultCallback;
      }
      alias = alias.toString();
      return this.modifyAliases([
        {
          add: {
            alias: alias,
            index: index
          }
        }
      ], callback);
    },
    deleteAlias: function(alias, index, callback) {
      if (callback == null) {
        callback = this.defaultCallback;
      }
      alias = alias.toString();
      return this.modifyAliases([
        {
          remove: {
            alias: alias,
            index: index
          }
        }
      ], callback);
    },
    getAliases: function(callback) {
      if (callback == null) {
        callback = this.defaultCallback;
      }
      return this.request("GET", {
        path: "_aliases",
        done: function(error, response, statusCode) {
          var alias, aliases, index, map, _i, _len, _ref;
          aliases = [];
          map = {};
          if (response != null) {
            for (index in response) {
              _ref = Object.keys(response[index].aliases);
              for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                alias = _ref[_i];
                if (map[alias] === void 0) {
                  aliases.push(alias);
                  map[alias] = [];
                }
                map[alias].push(index);
              }
            }
          }
          return callback(error, aliases, map);
        }
      });
    },
    modifyAliases: function(actions, callback) {
      if (callback == null) {
        callback = this.defaultCallback;
      }
      return this.request("POST", {
        path: "_aliases",
        body: {
          actions: actions
        },
        done: function(error, response) {
          return callback(error, (response != null ? response["acknowledged"] : void 0) != null);
        }
      });
    }
  };

}).call(this);
