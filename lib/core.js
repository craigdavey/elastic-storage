// Generated by CoffeeScript 1.3.3
(function() {
  var extend;

  extend = require("underscore").extend;

  module.exports = {
    index: function(address, attributes, callback) {
      if (callback == null) {
        callback = this.defaultCallback;
      }
      return this.request("PUT", {
        path: address,
        body: attributes,
        done: function(error, output, response, request) {
          return callback(error, void 0, response, request);
        }
      });
    },
    search: function(address, criteria, callback) {
      if (callback == null) {
        callback = this.defaultCallback;
      }
      return this.request("POST", {
        path: "" + address + "/_search",
        body: criteria,
        done: function(error, output, response, request) {
          var highlight, hits, _id, _score, _source, _type;
          if (output) {
            hits = (function() {
              var _i, _len, _ref, _ref1, _results;
              _ref = output.hits.hits;
              _results = [];
              for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                _ref1 = _ref[_i], _id = _ref1._id, _score = _ref1._score, _source = _ref1._source, _type = _ref1._type, highlight = _ref1.highlight;
                _results.push({
                  score: _score,
                  collection: _type,
                  record: extend(_source, {
                    id: _id
                  }),
                  highlights: highlight
                });
              }
              return _results;
            })();
            hits.total = output.hits.total;
            hits.highScore = output.hits.max_score;
          }
          return callback(error, hits, response, request);
        }
      });
    }
  };

}).call(this);
